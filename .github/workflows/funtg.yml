name: Upload PR Diff Files to Azure Blob Storage

on:
  pull_request:
    types: [opened, synchronize]

  workflow_dispatch:
    inputs:
      current_pr_number:
        description: 'Current Pull Request Number'
        required: true
      previous_pr_number:
        description: 'Previous Pull Request Number (optional)'
        required: false
      env:
        description: 'Target environment (e.g. dev, qa, prod)'
        required: true

jobs:
  upload-changed-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set PR SHA references and target environment
        id: setup
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual trigger: comparing PRs"
            export TARGET_ENV="${{ github.event.inputs.env }}"

            if [[ -n "${{ github.event.inputs.previous_pr_number }}" ]]; then
              base_sha=$(gh pr view ${{ github.event.inputs.previous_pr_number }} --json mergeCommit --jq '.mergeCommit.oid')
            else
              base_sha=$(git rev-parse origin/main)
            fi

            head_sha=$(gh pr view ${{ github.event.inputs.current_pr_number }} --json headRefOid --jq '.headRefOid')
          else
            echo "PR trigger: default to dev environment"
            export TARGET_ENV="dev"
            base_sha=$(git rev-parse origin/${{ github.event.pull_request.base.ref }})
            head_sha=$(git rev-parse HEAD)
          fi

          echo "BASE_SHA=$base_sha" >> $GITHUB_ENV
          echo "HEAD_SHA=$head_sha" >> $GITHUB_ENV
          echo "TARGET_ENV=$TARGET_ENV" >> $GITHUB_ENV

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get list of changed sql/ files
        run: |
          git fetch --all
          git diff --name-only $BASE_SHA $HEAD_SHA | grep '^sql/' > changed_files.txt
          echo "Filtered changed files in sql/:"
          cat changed_files.txt

      - name: Azure login based on environment
        run: |
          case "$TARGET_ENV" in
            dev)
              echo "Logging in to Azure for DEV..."
              az login --service-principal \
                --username "${{ secrets.AZURE_CLIENT_ID_DEV }}" \
                --password "${{ secrets.AZURE_CLIENT_SECRET_DEV }}" \
                --tenant "${{ secrets.AZURE_TENANT_ID }}"
              ;;
            qa)
              echo "Logging in to Azure for QA..."
              az login --service-principal \
                --username "${{ secrets.AZURE_CLIENT_ID_QA }}" \
                --password "${{ secrets.AZURE_CLIENT_SECRET_QA }}" \
                --tenant "${{ secrets.AZURE_TENANT_ID }}"
              ;;
            prod)
              echo "Logging in to Azure for PROD..."
              az login --service-principal \
                --username "${{ secrets.AZURE_CLIENT_ID_PROD }}" \
                --password "${{ secrets.AZURE_CLIENT_SECRET_PROD }}" \
                --tenant "${{ secrets.AZURE_TENANT_ID }}"
              ;;
            *)
              echo "Unknown environment: $TARGET_ENV"
              exit 1
              ;;
          esac

      - name: Upload changed sql/ files to Azure Blob
        run: |
          while read -r file; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              az storage blob upload \
                --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
                --container-name ${{ secrets.AZURE_CONTAINER_NAME }} \
                --name "$file" \
                --file "$file" \
                --auth-mode login \
                --overwrite
            fi
          done < changed_files.txt
